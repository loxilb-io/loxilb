name: K3s-Calico-Sanity-CI-Ubuntu-24
on:
 #schedule:
 # Runs "At 11:00 UTC every day-of-week"
 #- cron: '0 11 * * *'
 workflow_dispatch:
    inputs:
      testName:
        description: 'Test Run-Name'     
        required: true
        default: 'k3s-calico-ubuntu-24'
 #workflow_run:
 #   workflows: ["Docker-Multi-Arch"]
 #   types:
 #     - completed
jobs:
  build:
    name: k3s-calico-sanity
    runs-on: ubuntu-24.04
    if: github.repository == 'loxilb-io/loxilb'
          &&  github.event.inputs.tagName == ''
    steps:
      - run: |
         echo "KUBECONFIG=--kubeconfig=/etc/rancher/k3s/k3s.yaml" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: sudo apt-get -y install lksctp-tools
      - run: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.22.9+k3s1 INSTALL_K3S_EXEC="server --disable traefik --disable servicelb --disable-cloud-controller --kubelet-arg cloud-provider=external --flannel-backend=none --cluster-cidr=10.42.0.0/16" K3S_KUBECONFIG_MODE="644" sh -
      - run: |
         sleep 10
         kubectl "${{ env.KUBECONFIG }}" create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/tigera-operator.yaml
      - run: |
         sleep 10
         kubectl "${{ env.KUBECONFIG }}" create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/custom-resources.yaml
      - run: |
         sleep 10
         kubectl "${{ env.KUBECONFIG }}" taint nodes --all node.cloudprovider.kubernetes.io/uninitialized=false:NoSchedule-
         sleep 60
         kubectl "${{ env.KUBECONFIG }}" get nodes
         kubectl "${{ env.KUBECONFIG }}" get pods -A
         wget https://github.com/loxilb-io/loxi-ccm/raw/master/manifests/loxi-ccm-k3s.yaml
         kubectl "${{ env.KUBECONFIG }}" apply -f ./loxi-ccm-k3s.yaml
         sleep 60
         kubectl "${{ env.KUBECONFIG }}" get pods -A
      - run: |
         cd cicd/k3s-calico/
         ./config.sh "${{ env.KUBECONFIG }}"
         ./validation.sh "${{ env.KUBECONFIG }}"
         ./rmconfig.sh "${{ env.KUBECONFIG }}"
         cd -

name: Cluster-Sanity-CI

on:
  workflow_dispatch:
    inputs:
      userInput:
        description: 'Enter string to print at end'
        required: true
        default: 'Finished'
      tags:
        description: 'Cluster Sanity'
       
jobs:
  build:
    name: cluster-sanity
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
      - uses: actions/setup-go@v3
        with:
             go-version: '>=1.18.0'
      - run: sudo apt-get update
      - run: sudo apt-get -y install clang-10 llvm libelf-dev gcc-multilib libpcap-dev linux-tools-$(uname -r) elfutils dwarves git libbsd-dev bridge-utils unzip build-essential bison flex iperf iproute2 nodejs socat
      - run: loxilb-ebpf/utils/mkllb_bpffs.sh
      - run: sudo -E env "PATH=$PATH" make
      - run: sudo -E env "PATH=$PATH" make test
      - run: docker pull ghcr.io/loxilb-io/loxilb:latest
      - run: docker run -u root --cap-add SYS_ADMIN   --restart unless-stopped --privileged -dit -v /dev/log:/dev/log --name loxilb ghcr.io/loxilb-io/loxilb:latest
      - run: pwd && ls && sudo -E env "PATH=$PATH" make docker-cp
      - run: id=`docker ps -f name=loxilb | cut  -d " "  -f 1 | grep -iv  "CONTAINER"` && docker commit $id ghcr.io/loxilb-io/loxilb:latest
      - run: docker stop loxilb && docker rm loxilb
      - run: |
             cd cicd/cluster1/
             ./config.sh
             ./validation.sh
             ./rmconfig.sh
             cd -
             cd cicd/cluster2/
             ./config.sh
             ./validation.sh
             ./rmconfig.sh
             cd -
             cd cicd/cluster3/
             ./config.sh
             ./validation.sh
             ./rmconfig.sh
             cd -
      - run: echo ${{ github.event.inputs.userInput }}

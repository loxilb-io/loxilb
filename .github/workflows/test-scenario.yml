name: Test-Scenario-CI

on:
 workflow_dispatch:
    inputs:
      testName:
          description: 'Test Scenario Name'     
          required: true
          default: 'sconnect'
      runsOn:
          description: 'Machine Type'
          required: true
          type: choice
          default: 'ubuntu-20.04'
          options:
            - ubuntu-20.04
            - ubuntu-22.04
            - ubuntu-24.04
       
jobs:
  build:
    name: test-scenario
    runs-on: ${{ github.event.inputs.runsOn }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
      - uses: actions/setup-go@v3
        with:
             go-version: '>=1.18.0'
      - run: sudo apt-get update
      - run: sudo apt-get -y install lksctp-tools linux-tools-$(uname -r) bridge-utils iperf iproute2 nodejs socat
      - run: sudo apt-get -y install clang-10 llvm libelf-dev gcc-multilib libpcap-dev elfutils dwarves git libbsd-dev unzip build-essential bison flex ethtool
      - run: loxilb-ebpf/utils/mkllb_bpffs.sh
      - run: sudo -E env "PATH=$PATH" make
      - run: docker pull ghcr.io/loxilb-io/loxilb:latest
      - run: docker run -u root --cap-add SYS_ADMIN   --restart unless-stopped --privileged -dit -v /dev/log:/dev/log --name loxilb ghcr.io/loxilb-io/loxilb:latest
      - run: pwd && ls && sudo -E env "PATH=$PATH" make docker-cp
      - run: docker exec -dit loxilb mkllb_bpffs
      - run: id=`docker ps -f name=loxilb | cut  -d " "  -f 1 | grep -iv  "CONTAINER"` && docker commit $id ghcr.io/loxilb-io/loxilb:latest
      - run: docker stop loxilb && docker rm loxilb
      - run: |
             cd cicd/${{ github.event.inputs.testName }}/
             ./config.sh
             ./validation.sh
             ./rmconfig.sh
             cd -

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// DeleteConfigNeighborIPAddressDevIfNameNoContentCode is the HTTP code returned for type DeleteConfigNeighborIPAddressDevIfNameNoContent
const DeleteConfigNeighborIPAddressDevIfNameNoContentCode int = 204

/*
DeleteConfigNeighborIPAddressDevIfNameNoContent OK

swagger:response deleteConfigNeighborIpAddressDevIfNameNoContent
*/
type DeleteConfigNeighborIPAddressDevIfNameNoContent struct {
}

// NewDeleteConfigNeighborIPAddressDevIfNameNoContent creates DeleteConfigNeighborIPAddressDevIfNameNoContent with default headers values
func NewDeleteConfigNeighborIPAddressDevIfNameNoContent() *DeleteConfigNeighborIPAddressDevIfNameNoContent {

	return &DeleteConfigNeighborIPAddressDevIfNameNoContent{}
}

// WriteResponse to the client
func (o *DeleteConfigNeighborIPAddressDevIfNameNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteConfigNeighborIPAddressDevIfNameBadRequestCode is the HTTP code returned for type DeleteConfigNeighborIPAddressDevIfNameBadRequest
const DeleteConfigNeighborIPAddressDevIfNameBadRequestCode int = 400

/*
DeleteConfigNeighborIPAddressDevIfNameBadRequest Malformed arguments for API call

swagger:response deleteConfigNeighborIpAddressDevIfNameBadRequest
*/
type DeleteConfigNeighborIPAddressDevIfNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigNeighborIPAddressDevIfNameBadRequest creates DeleteConfigNeighborIPAddressDevIfNameBadRequest with default headers values
func NewDeleteConfigNeighborIPAddressDevIfNameBadRequest() *DeleteConfigNeighborIPAddressDevIfNameBadRequest {

	return &DeleteConfigNeighborIPAddressDevIfNameBadRequest{}
}

// WithPayload adds the payload to the delete config neighbor Ip address dev if name bad request response
func (o *DeleteConfigNeighborIPAddressDevIfNameBadRequest) WithPayload(payload *models.Error) *DeleteConfigNeighborIPAddressDevIfNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config neighbor Ip address dev if name bad request response
func (o *DeleteConfigNeighborIPAddressDevIfNameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigNeighborIPAddressDevIfNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigNeighborIPAddressDevIfNameUnauthorizedCode is the HTTP code returned for type DeleteConfigNeighborIPAddressDevIfNameUnauthorized
const DeleteConfigNeighborIPAddressDevIfNameUnauthorizedCode int = 401

/*
DeleteConfigNeighborIPAddressDevIfNameUnauthorized Invalid authentication credentials

swagger:response deleteConfigNeighborIpAddressDevIfNameUnauthorized
*/
type DeleteConfigNeighborIPAddressDevIfNameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigNeighborIPAddressDevIfNameUnauthorized creates DeleteConfigNeighborIPAddressDevIfNameUnauthorized with default headers values
func NewDeleteConfigNeighborIPAddressDevIfNameUnauthorized() *DeleteConfigNeighborIPAddressDevIfNameUnauthorized {

	return &DeleteConfigNeighborIPAddressDevIfNameUnauthorized{}
}

// WithPayload adds the payload to the delete config neighbor Ip address dev if name unauthorized response
func (o *DeleteConfigNeighborIPAddressDevIfNameUnauthorized) WithPayload(payload *models.Error) *DeleteConfigNeighborIPAddressDevIfNameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config neighbor Ip address dev if name unauthorized response
func (o *DeleteConfigNeighborIPAddressDevIfNameUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigNeighborIPAddressDevIfNameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigNeighborIPAddressDevIfNameForbiddenCode is the HTTP code returned for type DeleteConfigNeighborIPAddressDevIfNameForbidden
const DeleteConfigNeighborIPAddressDevIfNameForbiddenCode int = 403

/*
DeleteConfigNeighborIPAddressDevIfNameForbidden Capacity insufficient

swagger:response deleteConfigNeighborIpAddressDevIfNameForbidden
*/
type DeleteConfigNeighborIPAddressDevIfNameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigNeighborIPAddressDevIfNameForbidden creates DeleteConfigNeighborIPAddressDevIfNameForbidden with default headers values
func NewDeleteConfigNeighborIPAddressDevIfNameForbidden() *DeleteConfigNeighborIPAddressDevIfNameForbidden {

	return &DeleteConfigNeighborIPAddressDevIfNameForbidden{}
}

// WithPayload adds the payload to the delete config neighbor Ip address dev if name forbidden response
func (o *DeleteConfigNeighborIPAddressDevIfNameForbidden) WithPayload(payload *models.Error) *DeleteConfigNeighborIPAddressDevIfNameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config neighbor Ip address dev if name forbidden response
func (o *DeleteConfigNeighborIPAddressDevIfNameForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigNeighborIPAddressDevIfNameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigNeighborIPAddressDevIfNameNotFoundCode is the HTTP code returned for type DeleteConfigNeighborIPAddressDevIfNameNotFound
const DeleteConfigNeighborIPAddressDevIfNameNotFoundCode int = 404

/*
DeleteConfigNeighborIPAddressDevIfNameNotFound Resource not found

swagger:response deleteConfigNeighborIpAddressDevIfNameNotFound
*/
type DeleteConfigNeighborIPAddressDevIfNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigNeighborIPAddressDevIfNameNotFound creates DeleteConfigNeighborIPAddressDevIfNameNotFound with default headers values
func NewDeleteConfigNeighborIPAddressDevIfNameNotFound() *DeleteConfigNeighborIPAddressDevIfNameNotFound {

	return &DeleteConfigNeighborIPAddressDevIfNameNotFound{}
}

// WithPayload adds the payload to the delete config neighbor Ip address dev if name not found response
func (o *DeleteConfigNeighborIPAddressDevIfNameNotFound) WithPayload(payload *models.Error) *DeleteConfigNeighborIPAddressDevIfNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config neighbor Ip address dev if name not found response
func (o *DeleteConfigNeighborIPAddressDevIfNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigNeighborIPAddressDevIfNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigNeighborIPAddressDevIfNameConflictCode is the HTTP code returned for type DeleteConfigNeighborIPAddressDevIfNameConflict
const DeleteConfigNeighborIPAddressDevIfNameConflictCode int = 409

/*
DeleteConfigNeighborIPAddressDevIfNameConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response deleteConfigNeighborIpAddressDevIfNameConflict
*/
type DeleteConfigNeighborIPAddressDevIfNameConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigNeighborIPAddressDevIfNameConflict creates DeleteConfigNeighborIPAddressDevIfNameConflict with default headers values
func NewDeleteConfigNeighborIPAddressDevIfNameConflict() *DeleteConfigNeighborIPAddressDevIfNameConflict {

	return &DeleteConfigNeighborIPAddressDevIfNameConflict{}
}

// WithPayload adds the payload to the delete config neighbor Ip address dev if name conflict response
func (o *DeleteConfigNeighborIPAddressDevIfNameConflict) WithPayload(payload *models.Error) *DeleteConfigNeighborIPAddressDevIfNameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config neighbor Ip address dev if name conflict response
func (o *DeleteConfigNeighborIPAddressDevIfNameConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigNeighborIPAddressDevIfNameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigNeighborIPAddressDevIfNameInternalServerErrorCode is the HTTP code returned for type DeleteConfigNeighborIPAddressDevIfNameInternalServerError
const DeleteConfigNeighborIPAddressDevIfNameInternalServerErrorCode int = 500

/*
DeleteConfigNeighborIPAddressDevIfNameInternalServerError Internal service error

swagger:response deleteConfigNeighborIpAddressDevIfNameInternalServerError
*/
type DeleteConfigNeighborIPAddressDevIfNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigNeighborIPAddressDevIfNameInternalServerError creates DeleteConfigNeighborIPAddressDevIfNameInternalServerError with default headers values
func NewDeleteConfigNeighborIPAddressDevIfNameInternalServerError() *DeleteConfigNeighborIPAddressDevIfNameInternalServerError {

	return &DeleteConfigNeighborIPAddressDevIfNameInternalServerError{}
}

// WithPayload adds the payload to the delete config neighbor Ip address dev if name internal server error response
func (o *DeleteConfigNeighborIPAddressDevIfNameInternalServerError) WithPayload(payload *models.Error) *DeleteConfigNeighborIPAddressDevIfNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config neighbor Ip address dev if name internal server error response
func (o *DeleteConfigNeighborIPAddressDevIfNameInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigNeighborIPAddressDevIfNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigNeighborIPAddressDevIfNameServiceUnavailableCode is the HTTP code returned for type DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable
const DeleteConfigNeighborIPAddressDevIfNameServiceUnavailableCode int = 503

/*
DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable Maintenance mode

swagger:response deleteConfigNeighborIpAddressDevIfNameServiceUnavailable
*/
type DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigNeighborIPAddressDevIfNameServiceUnavailable creates DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable with default headers values
func NewDeleteConfigNeighborIPAddressDevIfNameServiceUnavailable() *DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable {

	return &DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable{}
}

// WithPayload adds the payload to the delete config neighbor Ip address dev if name service unavailable response
func (o *DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable) WithPayload(payload *models.Error) *DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config neighbor Ip address dev if name service unavailable response
func (o *DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigNeighborIPAddressDevIfNameServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

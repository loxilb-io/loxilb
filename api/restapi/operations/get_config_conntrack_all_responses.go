// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// GetConfigConntrackAllOKCode is the HTTP code returned for type GetConfigConntrackAllOK
const GetConfigConntrackAllOKCode int = 200

/*
GetConfigConntrackAllOK OK

swagger:response getConfigConntrackAllOK
*/
type GetConfigConntrackAllOK struct {

	/*
	  In: Body
	*/
	Payload *GetConfigConntrackAllOKBody `json:"body,omitempty"`
}

// NewGetConfigConntrackAllOK creates GetConfigConntrackAllOK with default headers values
func NewGetConfigConntrackAllOK() *GetConfigConntrackAllOK {

	return &GetConfigConntrackAllOK{}
}

// WithPayload adds the payload to the get config conntrack all o k response
func (o *GetConfigConntrackAllOK) WithPayload(payload *GetConfigConntrackAllOKBody) *GetConfigConntrackAllOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get config conntrack all o k response
func (o *GetConfigConntrackAllOK) SetPayload(payload *GetConfigConntrackAllOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConfigConntrackAllOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetConfigConntrackAllUnauthorizedCode is the HTTP code returned for type GetConfigConntrackAllUnauthorized
const GetConfigConntrackAllUnauthorizedCode int = 401

/*
GetConfigConntrackAllUnauthorized Invalid authentication credentials

swagger:response getConfigConntrackAllUnauthorized
*/
type GetConfigConntrackAllUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetConfigConntrackAllUnauthorized creates GetConfigConntrackAllUnauthorized with default headers values
func NewGetConfigConntrackAllUnauthorized() *GetConfigConntrackAllUnauthorized {

	return &GetConfigConntrackAllUnauthorized{}
}

// WithPayload adds the payload to the get config conntrack all unauthorized response
func (o *GetConfigConntrackAllUnauthorized) WithPayload(payload *models.Error) *GetConfigConntrackAllUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get config conntrack all unauthorized response
func (o *GetConfigConntrackAllUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConfigConntrackAllUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetConfigConntrackAllInternalServerErrorCode is the HTTP code returned for type GetConfigConntrackAllInternalServerError
const GetConfigConntrackAllInternalServerErrorCode int = 500

/*
GetConfigConntrackAllInternalServerError Internal service error

swagger:response getConfigConntrackAllInternalServerError
*/
type GetConfigConntrackAllInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetConfigConntrackAllInternalServerError creates GetConfigConntrackAllInternalServerError with default headers values
func NewGetConfigConntrackAllInternalServerError() *GetConfigConntrackAllInternalServerError {

	return &GetConfigConntrackAllInternalServerError{}
}

// WithPayload adds the payload to the get config conntrack all internal server error response
func (o *GetConfigConntrackAllInternalServerError) WithPayload(payload *models.Error) *GetConfigConntrackAllInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get config conntrack all internal server error response
func (o *GetConfigConntrackAllInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConfigConntrackAllInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetConfigConntrackAllServiceUnavailableCode is the HTTP code returned for type GetConfigConntrackAllServiceUnavailable
const GetConfigConntrackAllServiceUnavailableCode int = 503

/*
GetConfigConntrackAllServiceUnavailable Maintenance mode

swagger:response getConfigConntrackAllServiceUnavailable
*/
type GetConfigConntrackAllServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetConfigConntrackAllServiceUnavailable creates GetConfigConntrackAllServiceUnavailable with default headers values
func NewGetConfigConntrackAllServiceUnavailable() *GetConfigConntrackAllServiceUnavailable {

	return &GetConfigConntrackAllServiceUnavailable{}
}

// WithPayload adds the payload to the get config conntrack all service unavailable response
func (o *GetConfigConntrackAllServiceUnavailable) WithPayload(payload *models.Error) *GetConfigConntrackAllServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get config conntrack all service unavailable response
func (o *GetConfigConntrackAllServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConfigConntrackAllServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

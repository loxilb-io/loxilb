// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// PostConfigLoadbalancerOKCode is the HTTP code returned for type PostConfigLoadbalancerOK
const PostConfigLoadbalancerOKCode int = 200

/*
PostConfigLoadbalancerOK OK

swagger:response postConfigLoadbalancerOK
*/
type PostConfigLoadbalancerOK struct {

	/*
	  In: Body
	*/
	Payload *models.PostSuccess `json:"body,omitempty"`
}

// NewPostConfigLoadbalancerOK creates PostConfigLoadbalancerOK with default headers values
func NewPostConfigLoadbalancerOK() *PostConfigLoadbalancerOK {

	return &PostConfigLoadbalancerOK{}
}

// WithPayload adds the payload to the post config loadbalancer o k response
func (o *PostConfigLoadbalancerOK) WithPayload(payload *models.PostSuccess) *PostConfigLoadbalancerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config loadbalancer o k response
func (o *PostConfigLoadbalancerOK) SetPayload(payload *models.PostSuccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigLoadbalancerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigLoadbalancerBadRequestCode is the HTTP code returned for type PostConfigLoadbalancerBadRequest
const PostConfigLoadbalancerBadRequestCode int = 400

/*
PostConfigLoadbalancerBadRequest Malformed arguments for API call

swagger:response postConfigLoadbalancerBadRequest
*/
type PostConfigLoadbalancerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigLoadbalancerBadRequest creates PostConfigLoadbalancerBadRequest with default headers values
func NewPostConfigLoadbalancerBadRequest() *PostConfigLoadbalancerBadRequest {

	return &PostConfigLoadbalancerBadRequest{}
}

// WithPayload adds the payload to the post config loadbalancer bad request response
func (o *PostConfigLoadbalancerBadRequest) WithPayload(payload *models.Error) *PostConfigLoadbalancerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config loadbalancer bad request response
func (o *PostConfigLoadbalancerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigLoadbalancerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigLoadbalancerUnauthorizedCode is the HTTP code returned for type PostConfigLoadbalancerUnauthorized
const PostConfigLoadbalancerUnauthorizedCode int = 401

/*
PostConfigLoadbalancerUnauthorized Invalid authentication credentials

swagger:response postConfigLoadbalancerUnauthorized
*/
type PostConfigLoadbalancerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigLoadbalancerUnauthorized creates PostConfigLoadbalancerUnauthorized with default headers values
func NewPostConfigLoadbalancerUnauthorized() *PostConfigLoadbalancerUnauthorized {

	return &PostConfigLoadbalancerUnauthorized{}
}

// WithPayload adds the payload to the post config loadbalancer unauthorized response
func (o *PostConfigLoadbalancerUnauthorized) WithPayload(payload *models.Error) *PostConfigLoadbalancerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config loadbalancer unauthorized response
func (o *PostConfigLoadbalancerUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigLoadbalancerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigLoadbalancerForbiddenCode is the HTTP code returned for type PostConfigLoadbalancerForbidden
const PostConfigLoadbalancerForbiddenCode int = 403

/*
PostConfigLoadbalancerForbidden Capacity insufficient

swagger:response postConfigLoadbalancerForbidden
*/
type PostConfigLoadbalancerForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigLoadbalancerForbidden creates PostConfigLoadbalancerForbidden with default headers values
func NewPostConfigLoadbalancerForbidden() *PostConfigLoadbalancerForbidden {

	return &PostConfigLoadbalancerForbidden{}
}

// WithPayload adds the payload to the post config loadbalancer forbidden response
func (o *PostConfigLoadbalancerForbidden) WithPayload(payload *models.Error) *PostConfigLoadbalancerForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config loadbalancer forbidden response
func (o *PostConfigLoadbalancerForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigLoadbalancerForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigLoadbalancerNotFoundCode is the HTTP code returned for type PostConfigLoadbalancerNotFound
const PostConfigLoadbalancerNotFoundCode int = 404

/*
PostConfigLoadbalancerNotFound Resource not found

swagger:response postConfigLoadbalancerNotFound
*/
type PostConfigLoadbalancerNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigLoadbalancerNotFound creates PostConfigLoadbalancerNotFound with default headers values
func NewPostConfigLoadbalancerNotFound() *PostConfigLoadbalancerNotFound {

	return &PostConfigLoadbalancerNotFound{}
}

// WithPayload adds the payload to the post config loadbalancer not found response
func (o *PostConfigLoadbalancerNotFound) WithPayload(payload *models.Error) *PostConfigLoadbalancerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config loadbalancer not found response
func (o *PostConfigLoadbalancerNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigLoadbalancerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigLoadbalancerConflictCode is the HTTP code returned for type PostConfigLoadbalancerConflict
const PostConfigLoadbalancerConflictCode int = 409

/*
PostConfigLoadbalancerConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response postConfigLoadbalancerConflict
*/
type PostConfigLoadbalancerConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigLoadbalancerConflict creates PostConfigLoadbalancerConflict with default headers values
func NewPostConfigLoadbalancerConflict() *PostConfigLoadbalancerConflict {

	return &PostConfigLoadbalancerConflict{}
}

// WithPayload adds the payload to the post config loadbalancer conflict response
func (o *PostConfigLoadbalancerConflict) WithPayload(payload *models.Error) *PostConfigLoadbalancerConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config loadbalancer conflict response
func (o *PostConfigLoadbalancerConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigLoadbalancerConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigLoadbalancerInternalServerErrorCode is the HTTP code returned for type PostConfigLoadbalancerInternalServerError
const PostConfigLoadbalancerInternalServerErrorCode int = 500

/*
PostConfigLoadbalancerInternalServerError Internal service error

swagger:response postConfigLoadbalancerInternalServerError
*/
type PostConfigLoadbalancerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigLoadbalancerInternalServerError creates PostConfigLoadbalancerInternalServerError with default headers values
func NewPostConfigLoadbalancerInternalServerError() *PostConfigLoadbalancerInternalServerError {

	return &PostConfigLoadbalancerInternalServerError{}
}

// WithPayload adds the payload to the post config loadbalancer internal server error response
func (o *PostConfigLoadbalancerInternalServerError) WithPayload(payload *models.Error) *PostConfigLoadbalancerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config loadbalancer internal server error response
func (o *PostConfigLoadbalancerInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigLoadbalancerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigLoadbalancerServiceUnavailableCode is the HTTP code returned for type PostConfigLoadbalancerServiceUnavailable
const PostConfigLoadbalancerServiceUnavailableCode int = 503

/*
PostConfigLoadbalancerServiceUnavailable Maintenance mode

swagger:response postConfigLoadbalancerServiceUnavailable
*/
type PostConfigLoadbalancerServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigLoadbalancerServiceUnavailable creates PostConfigLoadbalancerServiceUnavailable with default headers values
func NewPostConfigLoadbalancerServiceUnavailable() *PostConfigLoadbalancerServiceUnavailable {

	return &PostConfigLoadbalancerServiceUnavailable{}
}

// WithPayload adds the payload to the post config loadbalancer service unavailable response
func (o *PostConfigLoadbalancerServiceUnavailable) WithPayload(payload *models.Error) *PostConfigLoadbalancerServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config loadbalancer service unavailable response
func (o *PostConfigLoadbalancerServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigLoadbalancerServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

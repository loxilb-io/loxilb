// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContentCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent
const DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContentCode int = 204

/*
DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent OK

swagger:response deleteConfigIpv4addressIpAddressMaskDevIfNameNoContent
*/
type DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent struct {
}

// NewDeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent creates DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent with default headers values
func NewDeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent() *DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent {

	return &DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent{}
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequestCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest
const DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequestCode int = 400

/*
DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest Malformed arguments for API call

swagger:response deleteConfigIpv4addressIpAddressMaskDevIfNameBadRequest
*/
type DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest creates DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest with default headers values
func NewDeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest() *DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest {

	return &DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address mask dev if name bad request response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address mask dev if name bad request response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorizedCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized
const DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorizedCode int = 401

/*
DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized Invalid authentication credentials

swagger:response deleteConfigIpv4addressIpAddressMaskDevIfNameUnauthorized
*/
type DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized creates DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized with default headers values
func NewDeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized() *DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized {

	return &DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address mask dev if name unauthorized response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address mask dev if name unauthorized response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressMaskDevIfNameForbiddenCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden
const DeleteConfigIpv4addressIPAddressMaskDevIfNameForbiddenCode int = 403

/*
DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden Capacity insufficient

swagger:response deleteConfigIpv4addressIpAddressMaskDevIfNameForbidden
*/
type DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden creates DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden with default headers values
func NewDeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden() *DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden {

	return &DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address mask dev if name forbidden response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address mask dev if name forbidden response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFoundCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound
const DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFoundCode int = 404

/*
DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound Resource not found

swagger:response deleteConfigIpv4addressIpAddressMaskDevIfNameNotFound
*/
type DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound creates DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound with default headers values
func NewDeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound() *DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound {

	return &DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address mask dev if name not found response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address mask dev if name not found response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressMaskDevIfNameConflictCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict
const DeleteConfigIpv4addressIPAddressMaskDevIfNameConflictCode int = 409

/*
DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response deleteConfigIpv4addressIpAddressMaskDevIfNameConflict
*/
type DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressMaskDevIfNameConflict creates DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict with default headers values
func NewDeleteConfigIpv4addressIPAddressMaskDevIfNameConflict() *DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict {

	return &DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address mask dev if name conflict response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address mask dev if name conflict response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerErrorCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError
const DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerErrorCode int = 500

/*
DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError Internal service error

swagger:response deleteConfigIpv4addressIpAddressMaskDevIfNameInternalServerError
*/
type DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError creates DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError with default headers values
func NewDeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError() *DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError {

	return &DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address mask dev if name internal server error response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address mask dev if name internal server error response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailableCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable
const DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailableCode int = 503

/*
DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable Maintenance mode

swagger:response deleteConfigIpv4addressIpAddressMaskDevIfNameServiceUnavailable
*/
type DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable creates DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable with default headers values
func NewDeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable() *DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable {

	return &DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address mask dev if name service unavailable response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address mask dev if name service unavailable response
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressMaskDevIfNameServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

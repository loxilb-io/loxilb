// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// PostConfigNeighborNoContentCode is the HTTP code returned for type PostConfigNeighborNoContent
const PostConfigNeighborNoContentCode int = 204

/*
PostConfigNeighborNoContent OK

swagger:response postConfigNeighborNoContent
*/
type PostConfigNeighborNoContent struct {
}

// NewPostConfigNeighborNoContent creates PostConfigNeighborNoContent with default headers values
func NewPostConfigNeighborNoContent() *PostConfigNeighborNoContent {

	return &PostConfigNeighborNoContent{}
}

// WriteResponse to the client
func (o *PostConfigNeighborNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostConfigNeighborBadRequestCode is the HTTP code returned for type PostConfigNeighborBadRequest
const PostConfigNeighborBadRequestCode int = 400

/*
PostConfigNeighborBadRequest Malformed arguments for API call

swagger:response postConfigNeighborBadRequest
*/
type PostConfigNeighborBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigNeighborBadRequest creates PostConfigNeighborBadRequest with default headers values
func NewPostConfigNeighborBadRequest() *PostConfigNeighborBadRequest {

	return &PostConfigNeighborBadRequest{}
}

// WithPayload adds the payload to the post config neighbor bad request response
func (o *PostConfigNeighborBadRequest) WithPayload(payload *models.Error) *PostConfigNeighborBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config neighbor bad request response
func (o *PostConfigNeighborBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigNeighborBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigNeighborUnauthorizedCode is the HTTP code returned for type PostConfigNeighborUnauthorized
const PostConfigNeighborUnauthorizedCode int = 401

/*
PostConfigNeighborUnauthorized Invalid authentication credentials

swagger:response postConfigNeighborUnauthorized
*/
type PostConfigNeighborUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigNeighborUnauthorized creates PostConfigNeighborUnauthorized with default headers values
func NewPostConfigNeighborUnauthorized() *PostConfigNeighborUnauthorized {

	return &PostConfigNeighborUnauthorized{}
}

// WithPayload adds the payload to the post config neighbor unauthorized response
func (o *PostConfigNeighborUnauthorized) WithPayload(payload *models.Error) *PostConfigNeighborUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config neighbor unauthorized response
func (o *PostConfigNeighborUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigNeighborUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigNeighborForbiddenCode is the HTTP code returned for type PostConfigNeighborForbidden
const PostConfigNeighborForbiddenCode int = 403

/*
PostConfigNeighborForbidden Capacity insufficient

swagger:response postConfigNeighborForbidden
*/
type PostConfigNeighborForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigNeighborForbidden creates PostConfigNeighborForbidden with default headers values
func NewPostConfigNeighborForbidden() *PostConfigNeighborForbidden {

	return &PostConfigNeighborForbidden{}
}

// WithPayload adds the payload to the post config neighbor forbidden response
func (o *PostConfigNeighborForbidden) WithPayload(payload *models.Error) *PostConfigNeighborForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config neighbor forbidden response
func (o *PostConfigNeighborForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigNeighborForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigNeighborNotFoundCode is the HTTP code returned for type PostConfigNeighborNotFound
const PostConfigNeighborNotFoundCode int = 404

/*
PostConfigNeighborNotFound Resource not found

swagger:response postConfigNeighborNotFound
*/
type PostConfigNeighborNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigNeighborNotFound creates PostConfigNeighborNotFound with default headers values
func NewPostConfigNeighborNotFound() *PostConfigNeighborNotFound {

	return &PostConfigNeighborNotFound{}
}

// WithPayload adds the payload to the post config neighbor not found response
func (o *PostConfigNeighborNotFound) WithPayload(payload *models.Error) *PostConfigNeighborNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config neighbor not found response
func (o *PostConfigNeighborNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigNeighborNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigNeighborConflictCode is the HTTP code returned for type PostConfigNeighborConflict
const PostConfigNeighborConflictCode int = 409

/*
PostConfigNeighborConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response postConfigNeighborConflict
*/
type PostConfigNeighborConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigNeighborConflict creates PostConfigNeighborConflict with default headers values
func NewPostConfigNeighborConflict() *PostConfigNeighborConflict {

	return &PostConfigNeighborConflict{}
}

// WithPayload adds the payload to the post config neighbor conflict response
func (o *PostConfigNeighborConflict) WithPayload(payload *models.Error) *PostConfigNeighborConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config neighbor conflict response
func (o *PostConfigNeighborConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigNeighborConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigNeighborInternalServerErrorCode is the HTTP code returned for type PostConfigNeighborInternalServerError
const PostConfigNeighborInternalServerErrorCode int = 500

/*
PostConfigNeighborInternalServerError Internal service error

swagger:response postConfigNeighborInternalServerError
*/
type PostConfigNeighborInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigNeighborInternalServerError creates PostConfigNeighborInternalServerError with default headers values
func NewPostConfigNeighborInternalServerError() *PostConfigNeighborInternalServerError {

	return &PostConfigNeighborInternalServerError{}
}

// WithPayload adds the payload to the post config neighbor internal server error response
func (o *PostConfigNeighborInternalServerError) WithPayload(payload *models.Error) *PostConfigNeighborInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config neighbor internal server error response
func (o *PostConfigNeighborInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigNeighborInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigNeighborServiceUnavailableCode is the HTTP code returned for type PostConfigNeighborServiceUnavailable
const PostConfigNeighborServiceUnavailableCode int = 503

/*
PostConfigNeighborServiceUnavailable Maintenance mode

swagger:response postConfigNeighborServiceUnavailable
*/
type PostConfigNeighborServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigNeighborServiceUnavailable creates PostConfigNeighborServiceUnavailable with default headers values
func NewPostConfigNeighborServiceUnavailable() *PostConfigNeighborServiceUnavailable {

	return &PostConfigNeighborServiceUnavailable{}
}

// WithPayload adds the payload to the post config neighbor service unavailable response
func (o *PostConfigNeighborServiceUnavailable) WithPayload(payload *models.Error) *PostConfigNeighborServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config neighbor service unavailable response
func (o *PostConfigNeighborServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigNeighborServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

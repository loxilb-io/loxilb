// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// DeleteConfigFdbMacAddressDevIfNameNoContentCode is the HTTP code returned for type DeleteConfigFdbMacAddressDevIfNameNoContent
const DeleteConfigFdbMacAddressDevIfNameNoContentCode int = 204

/*
DeleteConfigFdbMacAddressDevIfNameNoContent OK

swagger:response deleteConfigFdbMacAddressDevIfNameNoContent
*/
type DeleteConfigFdbMacAddressDevIfNameNoContent struct {
}

// NewDeleteConfigFdbMacAddressDevIfNameNoContent creates DeleteConfigFdbMacAddressDevIfNameNoContent with default headers values
func NewDeleteConfigFdbMacAddressDevIfNameNoContent() *DeleteConfigFdbMacAddressDevIfNameNoContent {

	return &DeleteConfigFdbMacAddressDevIfNameNoContent{}
}

// WriteResponse to the client
func (o *DeleteConfigFdbMacAddressDevIfNameNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteConfigFdbMacAddressDevIfNameBadRequestCode is the HTTP code returned for type DeleteConfigFdbMacAddressDevIfNameBadRequest
const DeleteConfigFdbMacAddressDevIfNameBadRequestCode int = 400

/*
DeleteConfigFdbMacAddressDevIfNameBadRequest Malformed arguments for API call

swagger:response deleteConfigFdbMacAddressDevIfNameBadRequest
*/
type DeleteConfigFdbMacAddressDevIfNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigFdbMacAddressDevIfNameBadRequest creates DeleteConfigFdbMacAddressDevIfNameBadRequest with default headers values
func NewDeleteConfigFdbMacAddressDevIfNameBadRequest() *DeleteConfigFdbMacAddressDevIfNameBadRequest {

	return &DeleteConfigFdbMacAddressDevIfNameBadRequest{}
}

// WithPayload adds the payload to the delete config fdb mac address dev if name bad request response
func (o *DeleteConfigFdbMacAddressDevIfNameBadRequest) WithPayload(payload *models.Error) *DeleteConfigFdbMacAddressDevIfNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config fdb mac address dev if name bad request response
func (o *DeleteConfigFdbMacAddressDevIfNameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigFdbMacAddressDevIfNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigFdbMacAddressDevIfNameUnauthorizedCode is the HTTP code returned for type DeleteConfigFdbMacAddressDevIfNameUnauthorized
const DeleteConfigFdbMacAddressDevIfNameUnauthorizedCode int = 401

/*
DeleteConfigFdbMacAddressDevIfNameUnauthorized Invalid authentication credentials

swagger:response deleteConfigFdbMacAddressDevIfNameUnauthorized
*/
type DeleteConfigFdbMacAddressDevIfNameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigFdbMacAddressDevIfNameUnauthorized creates DeleteConfigFdbMacAddressDevIfNameUnauthorized with default headers values
func NewDeleteConfigFdbMacAddressDevIfNameUnauthorized() *DeleteConfigFdbMacAddressDevIfNameUnauthorized {

	return &DeleteConfigFdbMacAddressDevIfNameUnauthorized{}
}

// WithPayload adds the payload to the delete config fdb mac address dev if name unauthorized response
func (o *DeleteConfigFdbMacAddressDevIfNameUnauthorized) WithPayload(payload *models.Error) *DeleteConfigFdbMacAddressDevIfNameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config fdb mac address dev if name unauthorized response
func (o *DeleteConfigFdbMacAddressDevIfNameUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigFdbMacAddressDevIfNameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigFdbMacAddressDevIfNameForbiddenCode is the HTTP code returned for type DeleteConfigFdbMacAddressDevIfNameForbidden
const DeleteConfigFdbMacAddressDevIfNameForbiddenCode int = 403

/*
DeleteConfigFdbMacAddressDevIfNameForbidden Capacity insufficient

swagger:response deleteConfigFdbMacAddressDevIfNameForbidden
*/
type DeleteConfigFdbMacAddressDevIfNameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigFdbMacAddressDevIfNameForbidden creates DeleteConfigFdbMacAddressDevIfNameForbidden with default headers values
func NewDeleteConfigFdbMacAddressDevIfNameForbidden() *DeleteConfigFdbMacAddressDevIfNameForbidden {

	return &DeleteConfigFdbMacAddressDevIfNameForbidden{}
}

// WithPayload adds the payload to the delete config fdb mac address dev if name forbidden response
func (o *DeleteConfigFdbMacAddressDevIfNameForbidden) WithPayload(payload *models.Error) *DeleteConfigFdbMacAddressDevIfNameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config fdb mac address dev if name forbidden response
func (o *DeleteConfigFdbMacAddressDevIfNameForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigFdbMacAddressDevIfNameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigFdbMacAddressDevIfNameNotFoundCode is the HTTP code returned for type DeleteConfigFdbMacAddressDevIfNameNotFound
const DeleteConfigFdbMacAddressDevIfNameNotFoundCode int = 404

/*
DeleteConfigFdbMacAddressDevIfNameNotFound Resource not found

swagger:response deleteConfigFdbMacAddressDevIfNameNotFound
*/
type DeleteConfigFdbMacAddressDevIfNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigFdbMacAddressDevIfNameNotFound creates DeleteConfigFdbMacAddressDevIfNameNotFound with default headers values
func NewDeleteConfigFdbMacAddressDevIfNameNotFound() *DeleteConfigFdbMacAddressDevIfNameNotFound {

	return &DeleteConfigFdbMacAddressDevIfNameNotFound{}
}

// WithPayload adds the payload to the delete config fdb mac address dev if name not found response
func (o *DeleteConfigFdbMacAddressDevIfNameNotFound) WithPayload(payload *models.Error) *DeleteConfigFdbMacAddressDevIfNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config fdb mac address dev if name not found response
func (o *DeleteConfigFdbMacAddressDevIfNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigFdbMacAddressDevIfNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigFdbMacAddressDevIfNameConflictCode is the HTTP code returned for type DeleteConfigFdbMacAddressDevIfNameConflict
const DeleteConfigFdbMacAddressDevIfNameConflictCode int = 409

/*
DeleteConfigFdbMacAddressDevIfNameConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response deleteConfigFdbMacAddressDevIfNameConflict
*/
type DeleteConfigFdbMacAddressDevIfNameConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigFdbMacAddressDevIfNameConflict creates DeleteConfigFdbMacAddressDevIfNameConflict with default headers values
func NewDeleteConfigFdbMacAddressDevIfNameConflict() *DeleteConfigFdbMacAddressDevIfNameConflict {

	return &DeleteConfigFdbMacAddressDevIfNameConflict{}
}

// WithPayload adds the payload to the delete config fdb mac address dev if name conflict response
func (o *DeleteConfigFdbMacAddressDevIfNameConflict) WithPayload(payload *models.Error) *DeleteConfigFdbMacAddressDevIfNameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config fdb mac address dev if name conflict response
func (o *DeleteConfigFdbMacAddressDevIfNameConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigFdbMacAddressDevIfNameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigFdbMacAddressDevIfNameInternalServerErrorCode is the HTTP code returned for type DeleteConfigFdbMacAddressDevIfNameInternalServerError
const DeleteConfigFdbMacAddressDevIfNameInternalServerErrorCode int = 500

/*
DeleteConfigFdbMacAddressDevIfNameInternalServerError Internal service error

swagger:response deleteConfigFdbMacAddressDevIfNameInternalServerError
*/
type DeleteConfigFdbMacAddressDevIfNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigFdbMacAddressDevIfNameInternalServerError creates DeleteConfigFdbMacAddressDevIfNameInternalServerError with default headers values
func NewDeleteConfigFdbMacAddressDevIfNameInternalServerError() *DeleteConfigFdbMacAddressDevIfNameInternalServerError {

	return &DeleteConfigFdbMacAddressDevIfNameInternalServerError{}
}

// WithPayload adds the payload to the delete config fdb mac address dev if name internal server error response
func (o *DeleteConfigFdbMacAddressDevIfNameInternalServerError) WithPayload(payload *models.Error) *DeleteConfigFdbMacAddressDevIfNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config fdb mac address dev if name internal server error response
func (o *DeleteConfigFdbMacAddressDevIfNameInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigFdbMacAddressDevIfNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigFdbMacAddressDevIfNameServiceUnavailableCode is the HTTP code returned for type DeleteConfigFdbMacAddressDevIfNameServiceUnavailable
const DeleteConfigFdbMacAddressDevIfNameServiceUnavailableCode int = 503

/*
DeleteConfigFdbMacAddressDevIfNameServiceUnavailable Maintenance mode

swagger:response deleteConfigFdbMacAddressDevIfNameServiceUnavailable
*/
type DeleteConfigFdbMacAddressDevIfNameServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigFdbMacAddressDevIfNameServiceUnavailable creates DeleteConfigFdbMacAddressDevIfNameServiceUnavailable with default headers values
func NewDeleteConfigFdbMacAddressDevIfNameServiceUnavailable() *DeleteConfigFdbMacAddressDevIfNameServiceUnavailable {

	return &DeleteConfigFdbMacAddressDevIfNameServiceUnavailable{}
}

// WithPayload adds the payload to the delete config fdb mac address dev if name service unavailable response
func (o *DeleteConfigFdbMacAddressDevIfNameServiceUnavailable) WithPayload(payload *models.Error) *DeleteConfigFdbMacAddressDevIfNameServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config fdb mac address dev if name service unavailable response
func (o *DeleteConfigFdbMacAddressDevIfNameServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigFdbMacAddressDevIfNameServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// PostConfigIpv4addressNoContentCode is the HTTP code returned for type PostConfigIpv4addressNoContent
const PostConfigIpv4addressNoContentCode int = 204

/*
PostConfigIpv4addressNoContent OK

swagger:response postConfigIpv4addressNoContent
*/
type PostConfigIpv4addressNoContent struct {
}

// NewPostConfigIpv4addressNoContent creates PostConfigIpv4addressNoContent with default headers values
func NewPostConfigIpv4addressNoContent() *PostConfigIpv4addressNoContent {

	return &PostConfigIpv4addressNoContent{}
}

// WriteResponse to the client
func (o *PostConfigIpv4addressNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostConfigIpv4addressBadRequestCode is the HTTP code returned for type PostConfigIpv4addressBadRequest
const PostConfigIpv4addressBadRequestCode int = 400

/*
PostConfigIpv4addressBadRequest Malformed arguments for API call

swagger:response postConfigIpv4addressBadRequest
*/
type PostConfigIpv4addressBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigIpv4addressBadRequest creates PostConfigIpv4addressBadRequest with default headers values
func NewPostConfigIpv4addressBadRequest() *PostConfigIpv4addressBadRequest {

	return &PostConfigIpv4addressBadRequest{}
}

// WithPayload adds the payload to the post config ipv4address bad request response
func (o *PostConfigIpv4addressBadRequest) WithPayload(payload *models.Error) *PostConfigIpv4addressBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config ipv4address bad request response
func (o *PostConfigIpv4addressBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigIpv4addressBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigIpv4addressUnauthorizedCode is the HTTP code returned for type PostConfigIpv4addressUnauthorized
const PostConfigIpv4addressUnauthorizedCode int = 401

/*
PostConfigIpv4addressUnauthorized Invalid authentication credentials

swagger:response postConfigIpv4addressUnauthorized
*/
type PostConfigIpv4addressUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigIpv4addressUnauthorized creates PostConfigIpv4addressUnauthorized with default headers values
func NewPostConfigIpv4addressUnauthorized() *PostConfigIpv4addressUnauthorized {

	return &PostConfigIpv4addressUnauthorized{}
}

// WithPayload adds the payload to the post config ipv4address unauthorized response
func (o *PostConfigIpv4addressUnauthorized) WithPayload(payload *models.Error) *PostConfigIpv4addressUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config ipv4address unauthorized response
func (o *PostConfigIpv4addressUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigIpv4addressUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigIpv4addressForbiddenCode is the HTTP code returned for type PostConfigIpv4addressForbidden
const PostConfigIpv4addressForbiddenCode int = 403

/*
PostConfigIpv4addressForbidden Capacity insufficient

swagger:response postConfigIpv4addressForbidden
*/
type PostConfigIpv4addressForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigIpv4addressForbidden creates PostConfigIpv4addressForbidden with default headers values
func NewPostConfigIpv4addressForbidden() *PostConfigIpv4addressForbidden {

	return &PostConfigIpv4addressForbidden{}
}

// WithPayload adds the payload to the post config ipv4address forbidden response
func (o *PostConfigIpv4addressForbidden) WithPayload(payload *models.Error) *PostConfigIpv4addressForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config ipv4address forbidden response
func (o *PostConfigIpv4addressForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigIpv4addressForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigIpv4addressNotFoundCode is the HTTP code returned for type PostConfigIpv4addressNotFound
const PostConfigIpv4addressNotFoundCode int = 404

/*
PostConfigIpv4addressNotFound Resource not found

swagger:response postConfigIpv4addressNotFound
*/
type PostConfigIpv4addressNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigIpv4addressNotFound creates PostConfigIpv4addressNotFound with default headers values
func NewPostConfigIpv4addressNotFound() *PostConfigIpv4addressNotFound {

	return &PostConfigIpv4addressNotFound{}
}

// WithPayload adds the payload to the post config ipv4address not found response
func (o *PostConfigIpv4addressNotFound) WithPayload(payload *models.Error) *PostConfigIpv4addressNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config ipv4address not found response
func (o *PostConfigIpv4addressNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigIpv4addressNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigIpv4addressConflictCode is the HTTP code returned for type PostConfigIpv4addressConflict
const PostConfigIpv4addressConflictCode int = 409

/*
PostConfigIpv4addressConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response postConfigIpv4addressConflict
*/
type PostConfigIpv4addressConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigIpv4addressConflict creates PostConfigIpv4addressConflict with default headers values
func NewPostConfigIpv4addressConflict() *PostConfigIpv4addressConflict {

	return &PostConfigIpv4addressConflict{}
}

// WithPayload adds the payload to the post config ipv4address conflict response
func (o *PostConfigIpv4addressConflict) WithPayload(payload *models.Error) *PostConfigIpv4addressConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config ipv4address conflict response
func (o *PostConfigIpv4addressConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigIpv4addressConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigIpv4addressInternalServerErrorCode is the HTTP code returned for type PostConfigIpv4addressInternalServerError
const PostConfigIpv4addressInternalServerErrorCode int = 500

/*
PostConfigIpv4addressInternalServerError Internal service error

swagger:response postConfigIpv4addressInternalServerError
*/
type PostConfigIpv4addressInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigIpv4addressInternalServerError creates PostConfigIpv4addressInternalServerError with default headers values
func NewPostConfigIpv4addressInternalServerError() *PostConfigIpv4addressInternalServerError {

	return &PostConfigIpv4addressInternalServerError{}
}

// WithPayload adds the payload to the post config ipv4address internal server error response
func (o *PostConfigIpv4addressInternalServerError) WithPayload(payload *models.Error) *PostConfigIpv4addressInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config ipv4address internal server error response
func (o *PostConfigIpv4addressInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigIpv4addressInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigIpv4addressServiceUnavailableCode is the HTTP code returned for type PostConfigIpv4addressServiceUnavailable
const PostConfigIpv4addressServiceUnavailableCode int = 503

/*
PostConfigIpv4addressServiceUnavailable Maintenance mode

swagger:response postConfigIpv4addressServiceUnavailable
*/
type PostConfigIpv4addressServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigIpv4addressServiceUnavailable creates PostConfigIpv4addressServiceUnavailable with default headers values
func NewPostConfigIpv4addressServiceUnavailable() *PostConfigIpv4addressServiceUnavailable {

	return &PostConfigIpv4addressServiceUnavailable{}
}

// WithPayload adds the payload to the post config ipv4address service unavailable response
func (o *PostConfigIpv4addressServiceUnavailable) WithPayload(payload *models.Error) *PostConfigIpv4addressServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config ipv4address service unavailable response
func (o *PostConfigIpv4addressServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigIpv4addressServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

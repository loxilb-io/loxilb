// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// PostConfigMetricsNoContentCode is the HTTP code returned for type PostConfigMetricsNoContent
const PostConfigMetricsNoContentCode int = 204

/*
PostConfigMetricsNoContent OK

swagger:response postConfigMetricsNoContent
*/
type PostConfigMetricsNoContent struct {
}

// NewPostConfigMetricsNoContent creates PostConfigMetricsNoContent with default headers values
func NewPostConfigMetricsNoContent() *PostConfigMetricsNoContent {

	return &PostConfigMetricsNoContent{}
}

// WriteResponse to the client
func (o *PostConfigMetricsNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostConfigMetricsBadRequestCode is the HTTP code returned for type PostConfigMetricsBadRequest
const PostConfigMetricsBadRequestCode int = 400

/*
PostConfigMetricsBadRequest Malformed arguments for API call

swagger:response postConfigMetricsBadRequest
*/
type PostConfigMetricsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigMetricsBadRequest creates PostConfigMetricsBadRequest with default headers values
func NewPostConfigMetricsBadRequest() *PostConfigMetricsBadRequest {

	return &PostConfigMetricsBadRequest{}
}

// WithPayload adds the payload to the post config metrics bad request response
func (o *PostConfigMetricsBadRequest) WithPayload(payload *models.Error) *PostConfigMetricsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config metrics bad request response
func (o *PostConfigMetricsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigMetricsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigMetricsUnauthorizedCode is the HTTP code returned for type PostConfigMetricsUnauthorized
const PostConfigMetricsUnauthorizedCode int = 401

/*
PostConfigMetricsUnauthorized Invalid authentication credentials

swagger:response postConfigMetricsUnauthorized
*/
type PostConfigMetricsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigMetricsUnauthorized creates PostConfigMetricsUnauthorized with default headers values
func NewPostConfigMetricsUnauthorized() *PostConfigMetricsUnauthorized {

	return &PostConfigMetricsUnauthorized{}
}

// WithPayload adds the payload to the post config metrics unauthorized response
func (o *PostConfigMetricsUnauthorized) WithPayload(payload *models.Error) *PostConfigMetricsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config metrics unauthorized response
func (o *PostConfigMetricsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigMetricsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigMetricsInternalServerErrorCode is the HTTP code returned for type PostConfigMetricsInternalServerError
const PostConfigMetricsInternalServerErrorCode int = 500

/*
PostConfigMetricsInternalServerError Internal service error

swagger:response postConfigMetricsInternalServerError
*/
type PostConfigMetricsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigMetricsInternalServerError creates PostConfigMetricsInternalServerError with default headers values
func NewPostConfigMetricsInternalServerError() *PostConfigMetricsInternalServerError {

	return &PostConfigMetricsInternalServerError{}
}

// WithPayload adds the payload to the post config metrics internal server error response
func (o *PostConfigMetricsInternalServerError) WithPayload(payload *models.Error) *PostConfigMetricsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config metrics internal server error response
func (o *PostConfigMetricsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigMetricsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigMetricsServiceUnavailableCode is the HTTP code returned for type PostConfigMetricsServiceUnavailable
const PostConfigMetricsServiceUnavailableCode int = 503

/*
PostConfigMetricsServiceUnavailable Maintenance mode

swagger:response postConfigMetricsServiceUnavailable
*/
type PostConfigMetricsServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigMetricsServiceUnavailable creates PostConfigMetricsServiceUnavailable with default headers values
func NewPostConfigMetricsServiceUnavailable() *PostConfigMetricsServiceUnavailable {

	return &PostConfigMetricsServiceUnavailable{}
}

// WithPayload adds the payload to the post config metrics service unavailable response
func (o *PostConfigMetricsServiceUnavailable) WithPayload(payload *models.Error) *PostConfigMetricsServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config metrics service unavailable response
func (o *PostConfigMetricsServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigMetricsServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

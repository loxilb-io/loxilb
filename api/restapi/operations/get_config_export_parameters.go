// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
)

// NewGetConfigExportParams creates a new GetConfigExportParams object
//
// There are no default values defined in the spec.
func NewGetConfigExportParams() GetConfigExportParams {

	return GetConfigExportParams{}
}

// GetConfigExportParams contains all the bound params for the get config export operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetConfigExport
type GetConfigExportParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Comma-separated list of components to export (cluster, endpoint, firewall, loadbalancer, mirror, policy). If not specified, all components are exported.
	  In: query
	*/
	Components *string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetConfigExportParams() beforehand.
func (o *GetConfigExportParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qComponents, qhkComponents, _ := qs.GetOK("components")
	if err := o.bindComponents(qComponents, qhkComponents, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindComponents binds and validates parameter Components from query.
func (o *GetConfigExportParams) bindComponents(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}
	o.Components = &raw

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// PostConfigRouteNoContentCode is the HTTP code returned for type PostConfigRouteNoContent
const PostConfigRouteNoContentCode int = 204

/*
PostConfigRouteNoContent OK

swagger:response postConfigRouteNoContent
*/
type PostConfigRouteNoContent struct {
}

// NewPostConfigRouteNoContent creates PostConfigRouteNoContent with default headers values
func NewPostConfigRouteNoContent() *PostConfigRouteNoContent {

	return &PostConfigRouteNoContent{}
}

// WriteResponse to the client
func (o *PostConfigRouteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostConfigRouteBadRequestCode is the HTTP code returned for type PostConfigRouteBadRequest
const PostConfigRouteBadRequestCode int = 400

/*
PostConfigRouteBadRequest Malformed arguments for API call

swagger:response postConfigRouteBadRequest
*/
type PostConfigRouteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigRouteBadRequest creates PostConfigRouteBadRequest with default headers values
func NewPostConfigRouteBadRequest() *PostConfigRouteBadRequest {

	return &PostConfigRouteBadRequest{}
}

// WithPayload adds the payload to the post config route bad request response
func (o *PostConfigRouteBadRequest) WithPayload(payload *models.Error) *PostConfigRouteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config route bad request response
func (o *PostConfigRouteBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigRouteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigRouteUnauthorizedCode is the HTTP code returned for type PostConfigRouteUnauthorized
const PostConfigRouteUnauthorizedCode int = 401

/*
PostConfigRouteUnauthorized Invalid authentication credentials

swagger:response postConfigRouteUnauthorized
*/
type PostConfigRouteUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigRouteUnauthorized creates PostConfigRouteUnauthorized with default headers values
func NewPostConfigRouteUnauthorized() *PostConfigRouteUnauthorized {

	return &PostConfigRouteUnauthorized{}
}

// WithPayload adds the payload to the post config route unauthorized response
func (o *PostConfigRouteUnauthorized) WithPayload(payload *models.Error) *PostConfigRouteUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config route unauthorized response
func (o *PostConfigRouteUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigRouteUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigRouteForbiddenCode is the HTTP code returned for type PostConfigRouteForbidden
const PostConfigRouteForbiddenCode int = 403

/*
PostConfigRouteForbidden Capacity insufficient

swagger:response postConfigRouteForbidden
*/
type PostConfigRouteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigRouteForbidden creates PostConfigRouteForbidden with default headers values
func NewPostConfigRouteForbidden() *PostConfigRouteForbidden {

	return &PostConfigRouteForbidden{}
}

// WithPayload adds the payload to the post config route forbidden response
func (o *PostConfigRouteForbidden) WithPayload(payload *models.Error) *PostConfigRouteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config route forbidden response
func (o *PostConfigRouteForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigRouteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigRouteNotFoundCode is the HTTP code returned for type PostConfigRouteNotFound
const PostConfigRouteNotFoundCode int = 404

/*
PostConfigRouteNotFound Resource not found

swagger:response postConfigRouteNotFound
*/
type PostConfigRouteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigRouteNotFound creates PostConfigRouteNotFound with default headers values
func NewPostConfigRouteNotFound() *PostConfigRouteNotFound {

	return &PostConfigRouteNotFound{}
}

// WithPayload adds the payload to the post config route not found response
func (o *PostConfigRouteNotFound) WithPayload(payload *models.Error) *PostConfigRouteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config route not found response
func (o *PostConfigRouteNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigRouteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigRouteConflictCode is the HTTP code returned for type PostConfigRouteConflict
const PostConfigRouteConflictCode int = 409

/*
PostConfigRouteConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response postConfigRouteConflict
*/
type PostConfigRouteConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigRouteConflict creates PostConfigRouteConflict with default headers values
func NewPostConfigRouteConflict() *PostConfigRouteConflict {

	return &PostConfigRouteConflict{}
}

// WithPayload adds the payload to the post config route conflict response
func (o *PostConfigRouteConflict) WithPayload(payload *models.Error) *PostConfigRouteConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config route conflict response
func (o *PostConfigRouteConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigRouteConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigRouteInternalServerErrorCode is the HTTP code returned for type PostConfigRouteInternalServerError
const PostConfigRouteInternalServerErrorCode int = 500

/*
PostConfigRouteInternalServerError Internal service error

swagger:response postConfigRouteInternalServerError
*/
type PostConfigRouteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigRouteInternalServerError creates PostConfigRouteInternalServerError with default headers values
func NewPostConfigRouteInternalServerError() *PostConfigRouteInternalServerError {

	return &PostConfigRouteInternalServerError{}
}

// WithPayload adds the payload to the post config route internal server error response
func (o *PostConfigRouteInternalServerError) WithPayload(payload *models.Error) *PostConfigRouteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config route internal server error response
func (o *PostConfigRouteInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigRouteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigRouteServiceUnavailableCode is the HTTP code returned for type PostConfigRouteServiceUnavailable
const PostConfigRouteServiceUnavailableCode int = 503

/*
PostConfigRouteServiceUnavailable Maintenance mode

swagger:response postConfigRouteServiceUnavailable
*/
type PostConfigRouteServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigRouteServiceUnavailable creates PostConfigRouteServiceUnavailable with default headers values
func NewPostConfigRouteServiceUnavailable() *PostConfigRouteServiceUnavailable {

	return &PostConfigRouteServiceUnavailable{}
}

// WithPayload adds the payload to the post config route service unavailable response
func (o *PostConfigRouteServiceUnavailable) WithPayload(payload *models.Error) *PostConfigRouteServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config route service unavailable response
func (o *PostConfigRouteServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigRouteServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams creates a new DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams object
//
// There are no default values defined in the spec.
func NewDeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams() DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams {

	return DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams{}
}

// DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams contains all the bound params for the delete config loadbalancer hosturl hosturl externalipaddress IP address port port protocol proto operation
// typically these are obtained from a http.Request
//
// swagger:parameters DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProto
type DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*option for BGP enable
	  In: query
	*/
	Bgp *bool
	/*block value if any
	  In: query
	*/
	Block *float64
	/*Attributes for load balance service
	  Required: true
	  In: path
	*/
	Hosturl string
	/*Attributes for load balance service
	  Required: true
	  In: path
	*/
	IPAddress string
	/*Attributes for load balance service
	  Required: true
	  In: path
	*/
	Port float64
	/*Attributes for load balance service
	  Required: true
	  In: path
	*/
	Proto string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewDeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams() beforehand.
func (o *DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qBgp, qhkBgp, _ := qs.GetOK("bgp")
	if err := o.bindBgp(qBgp, qhkBgp, route.Formats); err != nil {
		res = append(res, err)
	}

	qBlock, qhkBlock, _ := qs.GetOK("block")
	if err := o.bindBlock(qBlock, qhkBlock, route.Formats); err != nil {
		res = append(res, err)
	}

	rHosturl, rhkHosturl, _ := route.Params.GetOK("hosturl")
	if err := o.bindHosturl(rHosturl, rhkHosturl, route.Formats); err != nil {
		res = append(res, err)
	}

	rIPAddress, rhkIPAddress, _ := route.Params.GetOK("ip_address")
	if err := o.bindIPAddress(rIPAddress, rhkIPAddress, route.Formats); err != nil {
		res = append(res, err)
	}

	rPort, rhkPort, _ := route.Params.GetOK("port")
	if err := o.bindPort(rPort, rhkPort, route.Formats); err != nil {
		res = append(res, err)
	}

	rProto, rhkProto, _ := route.Params.GetOK("proto")
	if err := o.bindProto(rProto, rhkProto, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindBgp binds and validates parameter Bgp from query.
func (o *DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams) bindBgp(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertBool(raw)
	if err != nil {
		return errors.InvalidType("bgp", "query", "bool", raw)
	}
	o.Bgp = &value

	return nil
}

// bindBlock binds and validates parameter Block from query.
func (o *DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams) bindBlock(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		return nil
	}

	value, err := swag.ConvertFloat64(raw)
	if err != nil {
		return errors.InvalidType("block", "query", "float64", raw)
	}
	o.Block = &value

	return nil
}

// bindHosturl binds and validates parameter Hosturl from path.
func (o *DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams) bindHosturl(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.Hosturl = raw

	return nil
}

// bindIPAddress binds and validates parameter IPAddress from path.
func (o *DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams) bindIPAddress(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.IPAddress = raw

	return nil
}

// bindPort binds and validates parameter Port from path.
func (o *DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams) bindPort(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	value, err := swag.ConvertFloat64(raw)
	if err != nil {
		return errors.InvalidType("port", "path", "float64", raw)
	}
	o.Port = value

	return nil
}

// bindProto binds and validates parameter Proto from path.
func (o *DeleteConfigLoadbalancerHosturlHosturlExternalipaddressIPAddressPortPortProtocolProtoParams) bindProto(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.Proto = raw

	return nil
}

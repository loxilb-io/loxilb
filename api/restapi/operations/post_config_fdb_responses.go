// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// PostConfigFdbNoContentCode is the HTTP code returned for type PostConfigFdbNoContent
const PostConfigFdbNoContentCode int = 204

/*
PostConfigFdbNoContent OK

swagger:response postConfigFdbNoContent
*/
type PostConfigFdbNoContent struct {
}

// NewPostConfigFdbNoContent creates PostConfigFdbNoContent with default headers values
func NewPostConfigFdbNoContent() *PostConfigFdbNoContent {

	return &PostConfigFdbNoContent{}
}

// WriteResponse to the client
func (o *PostConfigFdbNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostConfigFdbBadRequestCode is the HTTP code returned for type PostConfigFdbBadRequest
const PostConfigFdbBadRequestCode int = 400

/*
PostConfigFdbBadRequest Malformed arguments for API call

swagger:response postConfigFdbBadRequest
*/
type PostConfigFdbBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigFdbBadRequest creates PostConfigFdbBadRequest with default headers values
func NewPostConfigFdbBadRequest() *PostConfigFdbBadRequest {

	return &PostConfigFdbBadRequest{}
}

// WithPayload adds the payload to the post config fdb bad request response
func (o *PostConfigFdbBadRequest) WithPayload(payload *models.Error) *PostConfigFdbBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config fdb bad request response
func (o *PostConfigFdbBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigFdbBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigFdbUnauthorizedCode is the HTTP code returned for type PostConfigFdbUnauthorized
const PostConfigFdbUnauthorizedCode int = 401

/*
PostConfigFdbUnauthorized Invalid authentication credentials

swagger:response postConfigFdbUnauthorized
*/
type PostConfigFdbUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigFdbUnauthorized creates PostConfigFdbUnauthorized with default headers values
func NewPostConfigFdbUnauthorized() *PostConfigFdbUnauthorized {

	return &PostConfigFdbUnauthorized{}
}

// WithPayload adds the payload to the post config fdb unauthorized response
func (o *PostConfigFdbUnauthorized) WithPayload(payload *models.Error) *PostConfigFdbUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config fdb unauthorized response
func (o *PostConfigFdbUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigFdbUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigFdbForbiddenCode is the HTTP code returned for type PostConfigFdbForbidden
const PostConfigFdbForbiddenCode int = 403

/*
PostConfigFdbForbidden Capacity insufficient

swagger:response postConfigFdbForbidden
*/
type PostConfigFdbForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigFdbForbidden creates PostConfigFdbForbidden with default headers values
func NewPostConfigFdbForbidden() *PostConfigFdbForbidden {

	return &PostConfigFdbForbidden{}
}

// WithPayload adds the payload to the post config fdb forbidden response
func (o *PostConfigFdbForbidden) WithPayload(payload *models.Error) *PostConfigFdbForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config fdb forbidden response
func (o *PostConfigFdbForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigFdbForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigFdbNotFoundCode is the HTTP code returned for type PostConfigFdbNotFound
const PostConfigFdbNotFoundCode int = 404

/*
PostConfigFdbNotFound Resource not found

swagger:response postConfigFdbNotFound
*/
type PostConfigFdbNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigFdbNotFound creates PostConfigFdbNotFound with default headers values
func NewPostConfigFdbNotFound() *PostConfigFdbNotFound {

	return &PostConfigFdbNotFound{}
}

// WithPayload adds the payload to the post config fdb not found response
func (o *PostConfigFdbNotFound) WithPayload(payload *models.Error) *PostConfigFdbNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config fdb not found response
func (o *PostConfigFdbNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigFdbNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigFdbConflictCode is the HTTP code returned for type PostConfigFdbConflict
const PostConfigFdbConflictCode int = 409

/*
PostConfigFdbConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response postConfigFdbConflict
*/
type PostConfigFdbConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigFdbConflict creates PostConfigFdbConflict with default headers values
func NewPostConfigFdbConflict() *PostConfigFdbConflict {

	return &PostConfigFdbConflict{}
}

// WithPayload adds the payload to the post config fdb conflict response
func (o *PostConfigFdbConflict) WithPayload(payload *models.Error) *PostConfigFdbConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config fdb conflict response
func (o *PostConfigFdbConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigFdbConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigFdbInternalServerErrorCode is the HTTP code returned for type PostConfigFdbInternalServerError
const PostConfigFdbInternalServerErrorCode int = 500

/*
PostConfigFdbInternalServerError Internal service error

swagger:response postConfigFdbInternalServerError
*/
type PostConfigFdbInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigFdbInternalServerError creates PostConfigFdbInternalServerError with default headers values
func NewPostConfigFdbInternalServerError() *PostConfigFdbInternalServerError {

	return &PostConfigFdbInternalServerError{}
}

// WithPayload adds the payload to the post config fdb internal server error response
func (o *PostConfigFdbInternalServerError) WithPayload(payload *models.Error) *PostConfigFdbInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config fdb internal server error response
func (o *PostConfigFdbInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigFdbInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigFdbServiceUnavailableCode is the HTTP code returned for type PostConfigFdbServiceUnavailable
const PostConfigFdbServiceUnavailableCode int = 503

/*
PostConfigFdbServiceUnavailable Maintenance mode

swagger:response postConfigFdbServiceUnavailable
*/
type PostConfigFdbServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigFdbServiceUnavailable creates PostConfigFdbServiceUnavailable with default headers values
func NewPostConfigFdbServiceUnavailable() *PostConfigFdbServiceUnavailable {

	return &PostConfigFdbServiceUnavailable{}
}

// WithPayload adds the payload to the post config fdb service unavailable response
func (o *PostConfigFdbServiceUnavailable) WithPayload(payload *models.Error) *PostConfigFdbServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config fdb service unavailable response
func (o *PostConfigFdbServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigFdbServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
